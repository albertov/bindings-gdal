sudo: false

language: c

addons:
  apt:
    packages:
    - libgmp-dev
    - libarmadillo-dev
    - libcurl4-gnutls-dev
    - libexpat1-dev
    - libgeos-dev
    - libgif-dev
    - libhdf4-alt-dev
    - libjasper-dev
    - libjpeg-dev
    - liblzma-dev
    - libmysqlclient-dev
    - libnetcdf-dev
    - libopenjpeg-dev
    - libpng-dev
    - libpoppler-private-dev
    - libpq-dev
    - libproj-dev
    - libsqlite3-dev
    - liburiparser-dev
    - libwebp-dev
    - libxerces-c-dev
    - libxml2-dev
    - netcdf-bin
    - patch
    - unixodbc-dev
    - zlib1g-dev

env:
- ARGS="--resolver lts-2"   GDAL="2.1.1"  STACK_YAML="stack-lts-2.yaml"
- ARGS="--resolver lts-3"   GDAL="2.1.1"  STACK_YAML="stack.yaml"
- ARGS="--resolver lts-4"   GDAL="2.1.1"  STACK_YAML="stack.yaml"
- ARGS="--resolver lts-5"   GDAL="2.1.1"  STACK_YAML="stack.yaml"
- ARGS="--resolver lts-6"   GDAL="2.1.1"  STACK_YAML="stack.yaml"
- ARGS="--resolver lts-6"   GDAL="1.11.5"  STACK_YAML="stack.yaml"
- ARGS="--resolver lts-7"   GDAL="2.1.1"  STACK_YAML="stack.yaml"
- ARGS="--resolver nightly" GDAL="trunk"  STACK_YAML="stack.yaml"

matrix:
  allow_failures:
  - env: ARGS="--resolver nightly" GDAL="trunk"  STACK_YAML="stack.yaml"

before_install:
# Download, install and setup stack
- |
  echo "Installing Stack"
  set -e

  mkdir -p $HOME/.local/bin

  travis_retry curl -L https://www.stackage.org/stack/linux-x86_64 \
   | tar xz --wildcards --strip-components=1 -C $HOME/.local/bin '*/stack'

  stack $ARGS --no-terminal --install-ghc setup

# Download, configure, compile and install GDAL

- |
  echo "Installing GDAL"
  set -e

  export PATH=$HOME/.local/bin:$PATH
  if [ ${GDAL} = "trunk" ]; then
    export GDAL_PREFIX=$HOME/gdal-$GDAL # avoid cache
  else
    export GDAL_URL=http://download.osgeo.org/gdal/${GDAL}/gdal-${GDAL}.tar.gz
    export GDAL_PREFIX=$HOME/.local/gdal-$GDAL
  fi
  export GDAL_BIN=$GDAL_PREFIX/bin
  export GDAL_LIB=$GDAL_PREFIX/lib
  export GDAL_SRC=$HOME/gdal-$GDAL-src

  if [ ! -f $GDAL_BIN/gdal-config ]; then
    mkdir -p $GDAL_PREFIX
    mkdir -p $GDAL_SRC
    if [ ${GDAL} = "trunk" ]; then
      git clone --depth 1 https://github.com/OSGeo/gdal.git ${GDAL_SRC}  
      pushd $GDAL_SRC/gdal
    else
      travis_retry curl -L $GDAL_URL | tar xz --strip-components=1 -C $GDAL_SRC
      pushd $GDAL_SRC
    fi
    ./configure --prefix=$GDAL_PREFIX \
                --enable-debug \
                --without-libtool \
                --without-php \
                --without-python \
                --without-java \
                --without-perl \
                --without-ruby \
                --without-odbc
    make -j3
    make install
    popd
  fi

  export PATH=$GDAL_BIN:$PATH
  # It seems stack doesn't use the extraLibs and extraLibDirs that we set in
  # Setup.hs so the test suite can't link to the library unless we set
  # LD_LIBRARY_PATH
  export LD_LIBRARY_PATH=$GDAL_LIB:$LD_LIBRARY_PATH

- gdal-config --version

script:
- stack test --fast --flag bindings-gdal:examples $ARGS --no-terminal --stack-yaml=$STACK_YAML

cache:
  apt: true
  directories:
  - $HOME/.stack
  - $HOME/.local
